/*
A web attack that leaks user credential to the attacker via browser cookies which causes unsafe hiddenrequest.
Code adapted from adapted from example in paper: https://link.springer.com/chapter/10.1007/978-3-319-13841-1_6 
Expected repair: do not allow any request if the user credintial (i.e., after a successful login) happened.
*/
[program]
int main(int password, int act1, string act2, bool attack) {
    int browser;
    string originA;
    string originE;
    string correct;
    // string request;
    int request;
    bool attack;

    // browser = "chrome";
    originA = "web";
    originE = "evil"; 
    // correct = "MyPassword";
    // request = " ";
    request = 0;
    
    if (act1 == 1){
        browser = 1;
        if (password == 366){
            originA = "success";
            if (browser == 1){
                if (attack == true){
                    request = 2; // "hiddenrequest(unsafe)"    
                } 
                else {
                    request = 1; // "userrequest(safe)"   
                }
            }
            else {
                request = request;
            }
        }
        else {
            request = 0;
        }
    } 

    @ request = request;
    observe;
    return 0;
}

[formula]
forall pi. forall pii. ({password_pi = password_pii}) -> {request_pi = request_pii}

[outputs]
request

[iter]
2


